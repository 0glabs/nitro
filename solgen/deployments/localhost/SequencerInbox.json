{
  "address": "0x6973751B2EfcBB733Bd8Ed545090BAfCf667C6F7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBridge",
          "name": "_delayedBridge",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sequencer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "batchSequenceNumber",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "beforeAcc",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "afterAcc",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "delayedAcc",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "afterDelayedMessagesRead",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[4]",
          "name": "timeBounds",
          "type": "uint256[4]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "SequencerBatchDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "batchSequenceNumber",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "beforeAcc",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "afterAcc",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "delayedAcc",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "afterDelayedMessagesRead",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[4]",
          "name": "timeBounds",
          "type": "uint256[4]"
        }
      ],
      "name": "SequencerBatchDeliveredFromOrigin",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sequenceNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "afterDelayedMessagesRead",
          "type": "uint256"
        },
        {
          "internalType": "contract IGasRefunder",
          "name": "gasRefunder",
          "type": "address"
        }
      ],
      "name": "addSequencerL2Batch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sequenceNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "afterDelayedMessagesRead",
          "type": "uint256"
        },
        {
          "internalType": "contract IGasRefunder",
          "name": "gasRefunder",
          "type": "address"
        }
      ],
      "name": "addSequencerL2BatchFromOrigin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batchCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedBridge",
      "outputs": [
        {
          "internalType": "contract IBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalDelayedMessagesRead",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "kind",
          "type": "uint8"
        },
        {
          "internalType": "uint256[2]",
          "name": "l1BlockAndTimestamp",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "inboxSeqNum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPriceL1",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "messageDataHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "emptyData",
          "type": "bytes"
        }
      ],
      "name": "forceInclusion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "inboxAccs",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isBatchPoster",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDelayBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDelaySeconds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxFutureBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxFutureSeconds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDelayedMessagesRead",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x54c5b9499ffa875c14c9c673c0f7b57821df5802e993625fd7a5e79fdc6d3853",
  "receipt": {
    "to": null,
    "from": "0xFF21a5fD9E13241c95033Fcbc501EeaDC3572771",
    "contractAddress": "0x6973751B2EfcBB733Bd8Ed545090BAfCf667C6F7",
    "transactionIndex": 0,
    "gasUsed": "2072416",
    "logsBloom": "0x
    "blockHash": "0x8464d0640091238447c722ce6287df936c150921c03445008f7859096833ee7b",
    "transactionHash": "0x54c5b9499ffa875c14c9c673c0f7b57821df5802e993625fd7a5e79fdc6d3853",
    "logs": [],
    "blockNumber": 58,
    "cumulativeGasUsed": "2072416",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB0Ef627059b78749B094873F80c158Aa91200158",
    "0xFF21a5fD9E13241c95033Fcbc501EeaDC3572771"
  ],
  "solcInputHash": "e7611196dd0ae85361a704f7442944b3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBridge\",\"name\":\"_delayedBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sequencer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchSequenceNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beforeAcc\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"afterAcc\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"delayedAcc\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[4]\",\"name\":\"timeBounds\",\"type\":\"uint256[4]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"SequencerBatchDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchSequenceNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beforeAcc\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"afterAcc\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"delayedAcc\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[4]\",\"name\":\"timeBounds\",\"type\":\"uint256[4]\"}],\"name\":\"SequencerBatchDeliveredFromOrigin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"contract IGasRefunder\",\"name\":\"gasRefunder\",\"type\":\"address\"}],\"name\":\"addSequencerL2Batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"contract IGasRefunder\",\"name\":\"gasRefunder\",\"type\":\"address\"}],\"name\":\"addSequencerL2BatchFromOrigin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batchCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedBridge\",\"outputs\":[{\"internalType\":\"contract IBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256[2]\",\"name\":\"l1BlockAndTimestamp\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"inboxSeqNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPriceL1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"messageDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"emptyData\",\"type\":\"bytes\"}],\"name\":\"forceInclusion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"inboxAccs\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBatchPoster\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDelaySeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFutureBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFutureSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDelayedMessagesRead\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/bridge/SequencerInbox.sol\":\"SequencerInbox\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/bridge/IBridge.sol\":{\"content\":\"//\\n// Copyright 2021, Offchain Labs, Inc. All rights reserved.\\n// SPDX-License-Identifier: UNLICENSED\\n//\\n\\npragma solidity ^0.8.0;\\n\\ninterface IBridge {\\n    event MessageDelivered(\\n        uint256 indexed messageIndex,\\n        bytes32 indexed beforeInboxAcc,\\n        address inbox,\\n        uint8 kind,\\n        address sender,\\n        bytes32 messageDataHash,\\n        uint256 gasPrice,\\n        uint256 timestamp\\n    );\\n\\n    event BridgeCallTriggered(\\n        address indexed outbox,\\n        address indexed destAddr,\\n        uint256 amount,\\n        bytes data\\n    );\\n\\n    event InboxToggle(address indexed inbox, bool enabled);\\n\\n    event OutboxToggle(address indexed outbox, bool enabled);\\n\\n    function deliverMessageToInbox(\\n        uint8 kind,\\n        address sender,\\n        bytes32 messageDataHash\\n    ) external payable returns (uint256);\\n\\n    function executeCall(\\n        address destAddr,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory returnData);\\n\\n    // These are only callable by the admin\\n    function setInbox(address inbox, bool enabled) external;\\n\\n    function setOutbox(address inbox, bool enabled) external;\\n\\n    // View functions\\n\\n    function activeOutbox() external view returns (address);\\n\\n    function allowedInboxes(address inbox) external view returns (bool);\\n\\n    function allowedOutboxes(address outbox) external view returns (bool);\\n\\n    function inboxAccs(uint256 index) external view returns (bytes32);\\n\\n    function messageCount() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xae4ba4d11408a77db1d861568938cd19d776955a7ddee37d0d2fcecbf92b403c\",\"license\":\"UNLICENSED\"},\"src/bridge/ISequencerInbox.sol\":{\"content\":\"//\\n// Copyright 2021, Offchain Labs, Inc. All rights reserved.\\n// SPDX-License-Identifier: UNLICENSED\\n//\\n\\npragma solidity ^0.8.0;\\n\\ninterface ISequencerInbox {\\n    function inboxAccs(uint256 index) external view returns (bytes32);\\n    function batchCount() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe5d7a5320b41e5b978c9a52dc82d5d612517ca455125024ff0de336705e7136e\",\"license\":\"UNLICENSED\"},\"src/bridge/Messages.sol\":{\"content\":\"//\\n// Copyright 2021, Offchain Labs, Inc. All rights reserved.\\n// SPDX-License-Identifier: UNLICENSED\\n//\\n\\npragma solidity ^0.8.0;\\n\\nlibrary Messages {\\n    function messageHash(\\n        uint8 kind,\\n        address sender,\\n        uint256 blockNumber,\\n        uint256 timestamp,\\n        uint256 inboxSeqNum,\\n        uint256 gasPriceL1,\\n        bytes32 messageDataHash\\n    ) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encodePacked(\\n                    kind,\\n                    sender,\\n                    blockNumber,\\n                    timestamp,\\n                    inboxSeqNum,\\n                    gasPriceL1,\\n                    messageDataHash\\n                )\\n            );\\n    }\\n\\n    function addMessageToInbox(bytes32 inbox, bytes32 message) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(inbox, message));\\n    }\\n}\\n\",\"keccak256\":\"0xf98b507847f2b15d3923f38a164b12bdedc03f951bc981fec26607c3ed0c97b0\",\"license\":\"UNLICENSED\"},\"src/bridge/SequencerInbox.sol\":{\"content\":\"//\\n// Copyright 2021, Offchain Labs, Inc. All rights reserved.\\n// SPDX-License-Identifier: UNLICENSED\\n//\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBridge.sol\\\";\\nimport \\\"./ISequencerInbox.sol\\\";\\nimport \\\"./Messages.sol\\\";\\nimport \\\"../utils/IGasRefunder.sol\\\";\\n\\ncontract SequencerInbox is ISequencerInbox {\\n\\tbytes32[] public override inboxAccs;\\n    uint256 public totalDelayedMessagesRead;\\n\\n    IBridge public delayedBridge;\\n\\n    mapping(address => bool) public isBatchPoster;\\n    uint256 public maxDelayBlocks;\\n    uint256 public maxFutureBlocks;\\n    uint256 public maxDelaySeconds;\\n    uint256 public maxFutureSeconds;\\n\\n    event SequencerBatchDelivered(\\n        uint256 indexed batchSequenceNumber,\\n        bytes32 indexed beforeAcc,\\n        bytes32 indexed afterAcc,\\n        bytes32 delayedAcc,\\n        uint256 afterDelayedMessagesRead,\\n        uint256[4] timeBounds,\\n        bytes data\\n    );\\n\\n    event SequencerBatchDeliveredFromOrigin(\\n        uint256 indexed batchSequenceNumber,\\n        bytes32 indexed beforeAcc,\\n        bytes32 indexed afterAcc,\\n        bytes32 delayedAcc,\\n        uint256 afterDelayedMessagesRead,\\n        uint256[4] timeBounds\\n    );\\n\\n    constructor(\\n        IBridge _delayedBridge,\\n        address _sequencer\\n    ) {\\n        delayedBridge = _delayedBridge;\\n        isBatchPoster[_sequencer] = true;\\n\\n\\t\\tmaxDelaySeconds = 60*60*24;\\n\\t\\tmaxFutureSeconds = 60*60;\\n\\n\\t\\tmaxDelayBlocks = maxDelaySeconds * 15;\\n\\t\\tmaxFutureBlocks = 12;\\n    }\\n\\n    function getTimeBounds() internal view returns (uint256[4] memory) {\\n        uint256[4] memory bounds;\\n        if (block.timestamp > maxDelaySeconds) {\\n            bounds[0] = block.timestamp - maxDelaySeconds;\\n        } else {\\n            bounds[0] = 0;\\n        }\\n        bounds[1] = block.timestamp + maxFutureSeconds;\\n        if (block.number > maxDelayBlocks) {\\n            bounds[2] = block.number - maxDelayBlocks;\\n        } else {\\n            bounds[2] = 0;\\n        }\\n        bounds[3] = block.number + maxFutureBlocks;\\n        return bounds;\\n    }\\n\\n    function forceInclusion(\\n        uint256 _totalDelayedMessagesRead,\\n        uint8 kind,\\n        uint256[2] calldata l1BlockAndTimestamp,\\n        uint256 inboxSeqNum,\\n        uint256 gasPriceL1,\\n        address sender,\\n        bytes32 messageDataHash,\\n        bytes calldata emptyData\\n    ) external {\\n        require(_totalDelayedMessagesRead > totalDelayedMessagesRead, \\\"DELAYED_BACKWARDS\\\");\\n        {\\n            bytes32 messageHash = Messages.messageHash(\\n                kind,\\n                sender,\\n                l1BlockAndTimestamp[0],\\n                l1BlockAndTimestamp[1],\\n                inboxSeqNum,\\n                gasPriceL1,\\n                messageDataHash\\n            );\\n            // Can only force-include after the Sequencer-only window has expired.\\n            require(l1BlockAndTimestamp[0] + maxDelayBlocks < block.number, \\\"MAX_DELAY_BLOCKS\\\");\\n            require(l1BlockAndTimestamp[1] + maxDelaySeconds < block.timestamp, \\\"MAX_DELAY_TIME\\\");\\n\\n            // Verify that message hash represents the last message sequence of delayed message to be included\\n            bytes32 prevDelayedAcc = 0;\\n            if (_totalDelayedMessagesRead > 1) {\\n                prevDelayedAcc = delayedBridge.inboxAccs(_totalDelayedMessagesRead - 2);\\n            }\\n            require(\\n                delayedBridge.inboxAccs(_totalDelayedMessagesRead - 1) ==\\n                    Messages.addMessageToInbox(prevDelayedAcc, messageHash),\\n                \\\"DELAYED_ACCUMULATOR\\\"\\n            );\\n        }\\n\\n        require(emptyData.length == 0, \\\"NOT_EMPTY\\\");\\n        (bytes32 beforeAcc, bytes32 delayedAcc, bytes32 afterAcc, uint256[4] memory timeBounds) = addSequencerL2BatchImpl(\\n            emptyData,\\n            _totalDelayedMessagesRead\\n        );\\n        emit SequencerBatchDelivered(\\n            inboxAccs.length - 1,\\n            beforeAcc,\\n            afterAcc,\\n            delayedAcc,\\n            totalDelayedMessagesRead,\\n            timeBounds,\\n            emptyData\\n        );\\n    }\\n\\n    function addSequencerL2BatchFromOrigin(\\n        uint256 sequenceNumber,\\n        bytes calldata data,\\n        uint256 afterDelayedMessagesRead,\\n        IGasRefunder gasRefunder\\n    ) external {\\n        // solhint-disable-next-line avoid-tx-origin\\n        require(msg.sender == tx.origin, \\\"ORIGIN_ONLY\\\");\\n        require(isBatchPoster[msg.sender], \\\"NOT_BATCH_POSTER\\\");\\n\\n        uint256 startGasLeft = gasleft();\\n        uint256 calldataSize;\\n        assembly {\\n            calldataSize := calldatasize()\\n        }\\n\\n        require(inboxAccs.length == sequenceNumber, \\\"BAD_SEQ_NUM\\\");\\n        (bytes32 beforeAcc, bytes32 delayedAcc, bytes32 afterAcc, uint256[4] memory timeBounds) = addSequencerL2BatchImpl(\\n            data,\\n            afterDelayedMessagesRead\\n        );\\n        emit SequencerBatchDeliveredFromOrigin(\\n            inboxAccs.length - 1,\\n            beforeAcc,\\n            afterAcc,\\n            delayedAcc,\\n            totalDelayedMessagesRead,\\n            timeBounds\\n        );\\n\\n        if (address(gasRefunder) != address(0)) {\\n            gasRefunder.onGasSpent(payable(msg.sender), startGasLeft - gasleft(), calldataSize);\\n        }\\n    }\\n\\n    function addSequencerL2Batch(\\n        uint256 sequenceNumber,\\n        bytes calldata data,\\n        uint256 afterDelayedMessagesRead,\\n        IGasRefunder gasRefunder\\n    ) external {\\n        require(isBatchPoster[msg.sender], \\\"NOT_BATCH_POSTER\\\");\\n\\n        uint256 startGasLeft = gasleft();\\n\\n        require(inboxAccs.length == sequenceNumber, \\\"BAD_SEQ_NUM\\\");\\n        (bytes32 beforeAcc, bytes32 delayedAcc, bytes32 afterAcc, uint256[4] memory timeBounds) = addSequencerL2BatchImpl(\\n            data,\\n            afterDelayedMessagesRead\\n        );\\n        emit SequencerBatchDelivered(\\n            inboxAccs.length - 1,\\n            beforeAcc,\\n            afterAcc,\\n            delayedAcc,\\n            afterDelayedMessagesRead,\\n            timeBounds,\\n            data\\n        );\\n\\n        if (address(gasRefunder) != address(0)) {\\n            uint256 calldataSize;\\n            assembly {\\n                calldataSize := calldatasize()\\n            }\\n            gasRefunder.onGasSpent(payable(msg.sender), startGasLeft - gasleft(), calldataSize);\\n        }\\n    }\\n\\n    function addSequencerL2BatchImpl(\\n        bytes calldata data,\\n        uint256 afterDelayedMessagesRead\\n    ) internal returns (bytes32 beforeAcc, bytes32 delayedAcc, bytes32 acc, uint256[4] memory timeBounds) {\\n        require(afterDelayedMessagesRead >= totalDelayedMessagesRead, \\\"DELAYED_BACKWARDS\\\");\\n        require(delayedBridge.messageCount() >= afterDelayedMessagesRead, \\\"DELAYED_TOO_FAR\\\");\\n\\n        uint256 fullDataLen = 40 + data.length;\\n        require(fullDataLen >= 40, \\\"DATA_LEN_OVERFLOW\\\");\\n        bytes memory fullData = new bytes(fullDataLen);\\n        bytes memory header = abi.encodePacked(\\n            uint64(block.timestamp - maxDelaySeconds),\\n            uint64(block.timestamp + maxFutureSeconds),\\n            uint64(block.number - maxDelayBlocks),\\n            uint64(block.number + maxFutureBlocks),\\n            uint64(afterDelayedMessagesRead)\\n        );\\n        require(header.length == 40, \\\"BAD_HEADER_LEN\\\");\\n        for (uint256 i = 0; i < 40; i++) {\\n            fullData[i] = header[i];\\n        }\\n        // copy data into fullData at offset 40 (the extra 32 offset is because solidity puts the array len first)\\n        assembly {\\n            calldatacopy(add(fullData, 72), data.offset, data.length)\\n        }\\n\\n        if (inboxAccs.length > 0) {\\n            beforeAcc = inboxAccs[inboxAccs.length - 1];\\n        }\\n        if (afterDelayedMessagesRead > 0) {\\n            delayedAcc = delayedBridge.inboxAccs(afterDelayedMessagesRead - 1);\\n        }\\n        timeBounds = getTimeBounds();\\n        bytes32 fullDataHash = keccak256(fullData);\\n        acc = keccak256(abi.encodePacked(beforeAcc, fullDataHash, delayedAcc, timeBounds));\\n        inboxAccs.push(acc);\\n        totalDelayedMessagesRead = afterDelayedMessagesRead;\\n    }\\n\\n    function batchCount() external view override returns (uint256) {\\n        return inboxAccs.length;\\n    }\\n}\\n\",\"keccak256\":\"0x48e2dd3087f7c1cd489097b7e9d7fe6321969a4ff7acdfe79f6541e47bb9e7dd\",\"license\":\"UNLICENSED\"},\"src/utils/IGasRefunder.sol\":{\"content\":\"// \\n// Copyright 2021, Offchain Labs, Inc. All rights reserved.\\n// SPDX-License-Identifier: UNLICENSED\\n//\\n\\npragma solidity >=0.6.11 <0.9.0;\\n\\ninterface IGasRefunder {\\n    function onGasSpent(\\n        address payable spender,\\n        uint256 gasUsed,\\n        uint256 calldataSize\\n    ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0x53e12cef4148a19cb9a0adece22e052bfc8ff6fe3ca7798fc4543145282aef23\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806371c3e6fe1161007157806371c3e6fe146101675780637fa3a40e1461019757806385a27d01146101b5578063d9dd67ab146101d3578063e367a2c114610203578063f51de41b14610221576100b4565b806306f13056146100b957806327b6bc50146100d7578063342025fa146100f35780635b4697b51461011157806361a93f8f1461012f5780636f12b0c91461014b575b600080fd5b6100c161023f565b6040516100ce9190611c45565b60405180910390f35b6100f160048036038101906100ec919061143f565b61024b565b005b6100fb610631565b6040516101089190611c45565b60405180910390f35b610119610637565b6040516101269190611c45565b60405180910390f35b610149600480360381019061014491906113b7565b61063d565b005b610165600480360381019061016091906113b7565b610863565b005b610181600480360381019061017c91906112d6565b610af5565b60405161018e9190611a0f565b60405180910390f35b61019f610b15565b6040516101ac9190611c45565b60405180910390f35b6101bd610b1b565b6040516101ca9190611c45565b60405180910390f35b6101ed60048036038101906101e8919061135d565b610b21565b6040516101fa9190611a2a565b60405180910390f35b61020b610b45565b6040516102189190611c45565b60405180910390f35b610229610b4b565b6040516102369190611aca565b60405180910390f35b60008080549050905090565b600154891161028f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028690611b85565b60405180910390fd5b60006102d089868a6000600281106102aa576102a9611ee2565b5b60200201358b6001600281106102c3576102c2611ee2565b5b60200201358b8b8a610b71565b905043600454896000600281106102ea576102e9611ee2565b5b60200201356102f99190611cba565b10610339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033090611b65565b60405180910390fd5b426006548960016002811061035157610350611ee2565b5b60200201356103609190611cba565b106103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039790611be5565b60405180910390fd5b60008060001b905060018b111561046b57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9dd67ab60028d6103fc9190611d10565b6040518263ffffffff1660e01b81526004016104189190611c45565b60206040518083038186803b15801561043057600080fd5b505afa158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190611330565b90505b6104758183610bb3565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9dd67ab60018e6104c09190611d10565b6040518263ffffffff1660e01b81526004016104dc9190611c45565b60206040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190611330565b1461056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390611c05565b60405180910390fd5b5050600082829050146105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90611c25565b60405180910390fd5b6000806000806105c586868f610be6565b9350935093509350818460016000805490506105e19190611d10565b7fcc484743d09c5b06a4341c051a5a7ea3b1f37a163eb168a87995352377a188b686600154868c8c60405161061a959493929190611a7c565b60405180910390a450505050505050505050505050565b60065481565b60075481565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166106c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c090611bc5565b60405180910390fd5b60005a90508560008054905014610715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070c90611b45565b60405180910390fd5b600080600080610726898989610be6565b9350935093509350818460016000805490506107429190611d10565b7fcc484743d09c5b06a4341c051a5a7ea3b1f37a163eb168a87995352377a188b6868b868f8f604051610779959493929190611a7c565b60405180910390a4600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146108575760003690508673ffffffffffffffffffffffffffffffffffffffff1663e3db8a49335a896107e39190611d10565b846040518463ffffffff1660e01b8152600401610802939291906119d8565b602060405180830381600087803b15801561081c57600080fd5b505af1158015610830573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108549190611303565b50505b50505050505050505050565b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c890611b05565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095490611bc5565b60405180910390fd5b60005a9050600036905086600080549050146109ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a590611b45565b60405180910390fd5b6000806000806109bf8a8a8a610be6565b9350935093509350818460016000805490506109db9190611d10565b7fff510da397d39fa3a8c5461da09c932af0797331a85255c1cca09ca345f3413c8660015486604051610a1093929190611a45565b60405180910390a4600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610ae8578673ffffffffffffffffffffffffffffffffffffffff1663e3db8a49335a89610a759190611d10565b886040518463ffffffff1660e01b8152600401610a94939291906119d8565b602060405180830381600087803b158015610aae57600080fd5b505af1158015610ac2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae69190611303565b505b5050505050505050505050565b60036020528060005260406000206000915054906101000a900460ff1681565b60015481565b60055481565b60008181548110610b3157600080fd5b906000526020600020016000915090505481565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600087878787878787604051602001610b909796959493929190611957565b604051602081830303815290604052805190602001209050979650505050505050565b60008282604051602001610bc892919061187e565b60405160208183030381529060405280519060200120905092915050565b6000806000610bf3611194565b600154851015610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90611b85565b60405180910390fd5b84600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633dbcc8d16040518163ffffffff1660e01b815260040160206040518083038186803b158015610ca157600080fd5b505afa158015610cb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd9919061138a565b1015610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1190611ba5565b60405180910390fd5b6000878790506028610d2c9190611cba565b90506028811015610d72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6990611ae5565b60405180910390fd5b60008167ffffffffffffffff811115610d8e57610d8d611f11565b5b6040519080825280601f01601f191660200182016040528015610dc05781602001600182028036833780820191505090505b509050600060065442610dd39190611d10565b60075442610de19190611cba565b60045443610def9190611d10565b60055443610dfd9190611cba565b8b604051602001610e129594939291906118f8565b60405160208183030381529060405290506028815114610e67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5e90611b25565b60405180910390fd5b60005b6028811015610ee657818181518110610e8657610e85611ee2565b5b602001015160f81c60f81b838281518110610ea457610ea3611ee2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610ede90611e0e565b915050610e6a565b50888a6048840137600080805490501115610f2e5760006001600080549050610f0f9190611d10565b81548110610f2057610f1f611ee2565b5b906000526020600020015496505b6000881115610ff157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9dd67ab60018a610f829190611d10565b6040518263ffffffff1660e01b8152600401610f9e9190611c45565b60206040518083038186803b158015610fb657600080fd5b505afa158015610fca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fee9190611330565b95505b610ff9611073565b93506000828051906020012090508781888760405160200161101e94939291906118aa565b6040516020818303038152906040528051906020012095506000869080600181540180825580915050600190039060005260206000200160009091909190915055886001819055505050505093509350935093565b61107b611194565b611083611194565b6006544211156110bd576006544261109b9190611d10565b816000600481106110af576110ae611ee2565b5b6020020181815250506110dd565b6000816000600481106110d3576110d2611ee2565b5b6020020181815250505b600754426110eb9190611cba565b816001600481106110ff576110fe611ee2565b5b60200201818152505060045443111561114257600454436111209190611d10565b8160026004811061113457611133611ee2565b5b602002018181525050611162565b60008160026004811061115857611157611ee2565b5b6020020181815250505b600554436111709190611cba565b8160036004811061118457611183611ee2565b5b6020020181815250508091505090565b6040518060800160405280600490602082028036833780820191505090505090565b6000813590506111c581612154565b92915050565b6000819050826020600202820111156111e7576111e6611f4a565b5b92915050565b6000815190506111fc8161216b565b92915050565b60008135905061121181612182565b92915050565b60008151905061122681612182565b92915050565b60008083601f84011261124257611241611f45565b5b8235905067ffffffffffffffff81111561125f5761125e611f40565b5b60208301915083600182028301111561127b5761127a611f4a565b5b9250929050565b60008135905061129181612199565b92915050565b6000813590506112a6816121b0565b92915050565b6000815190506112bb816121b0565b92915050565b6000813590506112d0816121c7565b92915050565b6000602082840312156112ec576112eb611f54565b5b60006112fa848285016111b6565b91505092915050565b60006020828403121561131957611318611f54565b5b6000611327848285016111ed565b91505092915050565b60006020828403121561134657611345611f54565b5b600061135484828501611217565b91505092915050565b60006020828403121561137357611372611f54565b5b600061138184828501611297565b91505092915050565b6000602082840312156113a05761139f611f54565b5b60006113ae848285016112ac565b91505092915050565b6000806000806000608086880312156113d3576113d2611f54565b5b60006113e188828901611297565b955050602086013567ffffffffffffffff81111561140257611401611f4f565b5b61140e8882890161122c565b9450945050604061142188828901611297565b925050606061143288828901611282565b9150509295509295909350565b60008060008060008060008060006101208a8c03121561146257611461611f54565b5b60006114708c828d01611297565b99505060206114818c828d016112c1565b98505060406114928c828d016111cb565b97505060806114a38c828d01611297565b96505060a06114b48c828d01611297565b95505060c06114c58c828d016111b6565b94505060e06114d68c828d01611202565b9350506101008a013567ffffffffffffffff8111156114f8576114f7611f4f565b5b6115048c828d0161122c565b92509250509295985092959850929598565b6000611522838361180c565b60208301905092915050565b600061153a838361182a565b60208301905092915050565b61154f81611d56565b82525050565b61156661156182611d44565b611e57565b82525050565b61157581611c6a565b61157f8184611c82565b925061158a82611c60565b8060005b838110156115bb5781516115a28782611516565b96506115ad83611c75565b92505060018101905061158e565b505050505050565b6115cc81611c6a565b6115d68184611c8d565b92506115e182611c60565b8060005b838110156116125781516115f9878261152e565b965061160483611c75565b9250506001810190506115e5565b505050505050565b61162381611d68565b82525050565b61163281611d74565b82525050565b61164961164482611d74565b611e69565b82525050565b600061165b8385611c98565b9350611668838584611dff565b61167183611f59565b840190509392505050565b61168581611ddb565b82525050565b6000611698601183611ca9565b91506116a382611f91565b602082019050919050565b60006116bb600b83611ca9565b91506116c682611fba565b602082019050919050565b60006116de600e83611ca9565b91506116e982611fe3565b602082019050919050565b6000611701600b83611ca9565b915061170c8261200c565b602082019050919050565b6000611724601083611ca9565b915061172f82612035565b602082019050919050565b6000611747601183611ca9565b91506117528261205e565b602082019050919050565b600061176a600f83611ca9565b915061177582612087565b602082019050919050565b600061178d601083611ca9565b9150611798826120b0565b602082019050919050565b60006117b0600e83611ca9565b91506117bb826120d9565b602082019050919050565b60006117d3601383611ca9565b91506117de82612102565b602082019050919050565b60006117f6600983611ca9565b91506118018261212b565b602082019050919050565b61181581611db0565b82525050565b61182481611db0565b82525050565b61183381611db0565b82525050565b61184a61184582611db0565b611e85565b82525050565b61186161185c82611dba565b611e8f565b82525050565b61187861187382611dce565b611ea1565b82525050565b600061188a8285611638565b60208201915061189a8284611638565b6020820191508190509392505050565b60006118b68287611638565b6020820191506118c68286611638565b6020820191506118d68285611638565b6020820191506118e682846115c3565b60808201915081905095945050505050565b60006119048288611850565b6008820191506119148287611850565b6008820191506119248286611850565b6008820191506119348285611850565b6008820191506119448284611850565b6008820191508190509695505050505050565b6000611963828a611867565b6001820191506119738289611555565b6014820191506119838288611839565b6020820191506119938287611839565b6020820191506119a38286611839565b6020820191506119b38285611839565b6020820191506119c38284611638565b60208201915081905098975050505050505050565b60006060820190506119ed6000830186611546565b6119fa602083018561181b565b611a07604083018461181b565b949350505050565b6000602082019050611a24600083018461161a565b92915050565b6000602082019050611a3f6000830184611629565b92915050565b600060c082019050611a5a6000830186611629565b611a67602083018561181b565b611a74604083018461156c565b949350505050565b600060e082019050611a916000830188611629565b611a9e602083018761181b565b611aab604083018661156c565b81810360c0830152611abe81848661164f565b90509695505050505050565b6000602082019050611adf600083018461167c565b92915050565b60006020820190508181036000830152611afe8161168b565b9050919050565b60006020820190508181036000830152611b1e816116ae565b9050919050565b60006020820190508181036000830152611b3e816116d1565b9050919050565b60006020820190508181036000830152611b5e816116f4565b9050919050565b60006020820190508181036000830152611b7e81611717565b9050919050565b60006020820190508181036000830152611b9e8161173a565b9050919050565b60006020820190508181036000830152611bbe8161175d565b9050919050565b60006020820190508181036000830152611bde81611780565b9050919050565b60006020820190508181036000830152611bfe816117a3565b9050919050565b60006020820190508181036000830152611c1e816117c6565b9050919050565b60006020820190508181036000830152611c3e816117e9565b9050919050565b6000602082019050611c5a600083018461181b565b92915050565b6000819050919050565b600060049050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611cc582611db0565b9150611cd083611db0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d0557611d04611eb3565b5b828201905092915050565b6000611d1b82611db0565b9150611d2683611db0565b925082821015611d3957611d38611eb3565b5b828203905092915050565b6000611d4f82611d90565b9050919050565b6000611d6182611d90565b9050919050565b60008115159050919050565b6000819050919050565b6000611d8982611d44565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000611de682611ded565b9050919050565b6000611df882611d90565b9050919050565b82818337600083830152505050565b6000611e1982611db0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e4c57611e4b611eb3565b5b600182019050919050565b6000611e6282611e73565b9050919050565b6000819050919050565b6000611e7e82611f84565b9050919050565b6000819050919050565b6000611e9a82611f6a565b9050919050565b6000611eac82611f77565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160c01b9050919050565b60008160f81b9050919050565b60008160601b9050919050565b7f444154415f4c454e5f4f564552464c4f57000000000000000000000000000000600082015250565b7f4f524947494e5f4f4e4c59000000000000000000000000000000000000000000600082015250565b7f4241445f4845414445525f4c454e000000000000000000000000000000000000600082015250565b7f4241445f5345515f4e554d000000000000000000000000000000000000000000600082015250565b7f4d41585f44454c41595f424c4f434b5300000000000000000000000000000000600082015250565b7f44454c415945445f4241434b5741524453000000000000000000000000000000600082015250565b7f44454c415945445f544f4f5f4641520000000000000000000000000000000000600082015250565b7f4e4f545f42415443485f504f5354455200000000000000000000000000000000600082015250565b7f4d41585f44454c41595f54494d45000000000000000000000000000000000000600082015250565b7f44454c415945445f414343554d554c41544f5200000000000000000000000000600082015250565b7f4e4f545f454d5054590000000000000000000000000000000000000000000000600082015250565b61215d81611d44565b811461216857600080fd5b50565b61217481611d68565b811461217f57600080fd5b50565b61218b81611d74565b811461219657600080fd5b50565b6121a281611d7e565b81146121ad57600080fd5b50565b6121b981611db0565b81146121c457600080fd5b50565b6121d081611dce565b81146121db57600080fd5b5056fea26469706673582212202882b46cb680a7412b624afeae8b697f2da6e60b06d0e5f5b202e5f51492121c64736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2621,
        "contract": "src/bridge/SequencerInbox.sol:SequencerInbox",
        "label": "inboxAccs",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 2623,
        "contract": "src/bridge/SequencerInbox.sol:SequencerInbox",
        "label": "totalDelayedMessagesRead",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2626,
        "contract": "src/bridge/SequencerInbox.sol:SequencerInbox",
        "label": "delayedBridge",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IBridge)1703"
      },
      {
        "astId": 2630,
        "contract": "src/bridge/SequencerInbox.sol:SequencerInbox",
        "label": "isBatchPoster",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2632,
        "contract": "src/bridge/SequencerInbox.sol:SequencerInbox",
        "label": "maxDelayBlocks",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2634,
        "contract": "src/bridge/SequencerInbox.sol:SequencerInbox",
        "label": "maxFutureBlocks",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 2636,
        "contract": "src/bridge/SequencerInbox.sol:SequencerInbox",
        "label": "maxDelaySeconds",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 2638,
        "contract": "src/bridge/SequencerInbox.sol:SequencerInbox",
        "label": "maxFutureSeconds",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IBridge)1703": {
        "encoding": "inplace",
        "label": "contract IBridge",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]

jobs:
  # formatting:
  #   name: Formatting
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Go mod tidy checker
  #      id: gomodtidy
  #      uses: ./.github/actions/gomodtidy

  build:
    name: Build and Test Bold
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup node/yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
          cache-dependency-path: "**/contracts/yarn.lock"

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
        id: go

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          cache: false

      - name: AbiGen (nitro)
        run: make contracts

      - name: Get dependencies
        working-directory: ./bold
        run: |
          go get -v -t -d ./...

      - name: Build
        working-directory: ./bold
        run: go build -v ./...

      - name: Test
        working-directory: ./bold      
        run: ANVIL=$(which anvil) go test -v -covermode=atomic -coverprofile=coverage.out -timeout=20m ./...

      #- name: Upload coverage reports to Codecov
      #  uses: codecov/codecov-action@v4
      #  env:
      #    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  bazel:
    name: Bazel
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bold
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: bazelbuild/setup-bazelisk@v3
      - name: Mount bazel cache
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel
      - name: build
        run: bazel build //...
      - name: test
        run: bazel test //... --build_manual_tests --test_output=all

      # Foundry is required for end to end tests
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: coverage
        run: bazel coverage --combined_report=lcov //...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
